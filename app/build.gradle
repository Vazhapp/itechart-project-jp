plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.example.itechart'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.itechart"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    flavorDimensions "environment"
    productFlavors {
        prod {
            dimension "environment"
            rootProject.ext.getServerConfig('prod').each { key, val ->
                buildConfigField "String", key, val
            }
        }
        dev {
            dimension "environment"
            rootProject.ext.getServerConfig('dev').each { key, val ->
                buildConfigField "String", key, val
            }
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains("dev") && variant.buildType.name.endsWith('release')) {
            setIgnore(true)
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation(libs.bundles.androidx)

    implementation(libs.hilt)
    kapt(libs.hilt.compiler)
    kapt(libs.hilt.androidCompiler)

    implementation(libs.bundles.retrofit)
    implementation(libs.bundles.coroutines)

    implementation(libs.bundles.moshi)

    implementation(libs.coil)

    implementation(libs.androidx.viewmodel.compose)
    testImplementation(libs.junit)
    androidTestImplementation(libs.bundles.test)

    debugImplementation(libs.bundles.tooling)
}