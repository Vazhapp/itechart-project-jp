[versions]
# versions of dependenciesA
androidx-core = "1.9.0"
retrofit = "2.9.0"
retofit-logging-interceptor = "4.10.0"
google-hilt = "2.42"
coil = "2.2.2"
moshi = "1.14.0"
moshi-converter = "1.14.0"
coroutine = "1.6.4"
viewmodel-lifecycle = "2.5.1"
lifecycle = "2.5.1"
room = "2.4.3"
datastore = "1.0.0"
compose-viewmodel = "2.4.0"
activity = "1.6.1"
compose-ui = "1.3.3"
compose-material = "1.3.1"
junit = "4.13.2"
junit-android = "1.1.5"
espresso = "3.5.1"

[libraries]
# libraries

androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-activity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
androidx-compose = { module = "androidx.compose.ui:ui", version.ref = "compose-ui" }
androidx-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui" }
androidx-material = { module = "androidx.compose.material:material", version.ref = "compose-material"}

junit = { module = "junit:junit", version.ref = "junit" }
junit-android = { module = "androidx.test.ext:junit", version.ref = "junit-android" }
test-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
test-compose = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose-ui" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui" }
compose-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose-ui" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "retofit-logging-interceptor" }
converter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

moshi-core = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-converter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "moshi-converter"}
moshi-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

coil = { module = "io.coil-kt:coil-compose", version.ref = "coil"}

hilt = { module = "com.google.dagger:hilt-android", version.ref = "google-hilt" }
hilt-androidCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "google-hilt" }
hilt-compiler = "androidx.hilt:hilt-compiler:1.0.0"

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }

androidx-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "compose-viewmodel"}
androidx-viewmodel-lifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "viewmodel-lifecycle" }
androidx-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "viewmodel-lifecycle" }
androidx-lifecycle-compiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "viewmodel-lifecycle" }

androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore"}
androidx-datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "datastore"}
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastore"}

androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-ktx = { module = "androidx.room:room-runtime", version.ref = "room"}
androidx-room-compiler = { module = "androidx.room:room-runtime", version.ref = "room"}

[bundles]
retrofit = [
    "retrofit",
    "logging-interceptor",
    "converter"
]

moshi = [
    "moshi-core",
    "moshi-converter"
]

coroutines = [
    "coroutines-core",
    "coroutines-android"
]

androidx = [
    "androidx-core",
    "androidx-lifecycle",
    "androidx-activity",
    "androidx-compose",
    "androidx-preview",
    "androidx-material"
]

test = [
    "junit-android",
    "test-espresso",
    "test-compose"
]

tooling = [
    "compose-tooling",
    "compose-test-manifest"
]